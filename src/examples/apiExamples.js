/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API Workforce Tracker
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∏–º–µ—Ä—ã –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö API –≤—ã–∑–æ–≤–æ–≤
 */

import authService from '../services/authService';
import punchService from '../services/punchService';
import geoService from '../services/geoService';
import fileUploadService from '../services/fileUploadService';
import cameraService from '../services/cameraService';

// –ü—Ä–∏–º–µ—Ä 1: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const exampleAuth = async () => {
  console.log('=== –ü—Ä–∏–º–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ===');
  
  try {
    const result = await authService.login('79999999999', '123456');
    
    if (result.success) {
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', result.data);
      return result.data;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', result.error);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
    return null;
  }
};

// –ü—Ä–∏–º–µ—Ä 2: –ù–∞—á–∞–ª–æ —Å–º–µ–Ω—ã (Punch In)
export const examplePunchIn = async (userId) => {
  console.log('=== –ü—Ä–∏–º–µ—Ä –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã ===');
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –¥–µ–ª–∞–µ–º —Ñ–æ—Ç–æ
    const photoResult = await cameraService.takePhoto();
    console.log('üì∏ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–æ—Ç–æ:', photoResult);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º punch in
    const result = await punchService.punchIn(
      userId,
      '123456789012345', // IMEI
      photoResult.success ? photoResult.data.fileName : 'start_shift.jpg'
    );
    
    if (result.success) {
      console.log('‚úÖ –°–º–µ–Ω–∞ –Ω–∞—á–∞—Ç–∞:', result.data);
      
      // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ
      if (photoResult.success) {
        const uploadResult = await fileUploadService.uploadPhoto(
          photoResult.data.uri,
          userId,
          1, // place_id
          '123456789012345', // IMEI
          'start-shift'
        );
        console.log('üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ:', uploadResult);
      }
      
      return result.data;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã:', result.error);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ —Å–º–µ–Ω—ã:', error);
    return null;
  }
};

// –ü—Ä–∏–º–µ—Ä 3: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã (Punch Out)
export const examplePunchOut = async (userId) => {
  console.log('=== –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã ===');
  
  try {
    // –î–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ
    const photoResult = await cameraService.takePhoto();
    console.log('üì∏ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ç–æ:', photoResult);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º punch out
    const result = await punchService.punchOut(
      userId,
      '123456789012345', // IMEI
      photoResult.success ? photoResult.data.fileName : 'end_shift.jpg'
    );
    
    if (result.success) {
      console.log('‚úÖ –°–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', result.data);
      
      // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ
      if (photoResult.success) {
        const uploadResult = await fileUploadService.uploadPhoto(
          photoResult.data.uri,
          userId,
          1, // place_id
          '123456789012345', // IMEI
          'end-shift'
        );
        console.log('üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ç–æ:', uploadResult);
      }
      
      return result.data;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã:', result.error);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–º–µ–Ω—ã:', error);
    return null;
  }
};

// –ü—Ä–∏–º–µ—Ä 4: –†–∞–±–æ—Ç–∞ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π
export const exampleGeoLocation = async (userId) => {
  console.log('=== –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π ===');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
    const location = await geoService.getCurrentLocation();
    console.log('üìç –¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è:', location);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é
    const geoPoint = geoService.addGeoPoint(
      location.latitude,
      location.longitude,
      location.altitude,
      location.altitude + 5, // altmsl
      true, // hasAlt
      true, // hasAltMsl
      false, // hasAltMslAccuracy
      1.5 // mslAccuracyMeters
    );
    console.log('üìç –î–æ–±–∞–≤–ª–µ–Ω–∞ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—è:', geoPoint);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ—á–µ–∫
    const geoCount = geoService.getGeoDataCount();
    console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–æ–ø–æ–∑–∏—Ü–∏–π:', geoCount);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–µ–æ–¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const saveResult = await geoService.saveGeoData(
      userId,
      1, // place_id
      '123456789012345' // IMEI
    );
    
    if (saveResult.success) {
      console.log('‚úÖ –ì–µ–æ–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', saveResult.data);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö:', saveResult.error);
    }
    
    return saveResult;
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π:', error);
    return null;
  }
};

// –ü—Ä–∏–º–µ—Ä 5: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
export const examplePhotoUpload = async (userId) => {
  console.log('=== –ü—Ä–∏–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π ===');
  
  try {
    // –î–µ–ª–∞–µ–º –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ
    const photoResult = await cameraService.takePhoto();
    console.log('üì∏ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–æ—Ç–æ:', photoResult);
    
    if (photoResult.success) {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const uploadResult = await fileUploadService.uploadPhoto(
        photoResult.data.uri,
        userId,
        1, // place_id
        '123456789012345', // IMEI
        'example-photo'
      );
      
      if (uploadResult.success) {
        console.log('‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', uploadResult.data);
        return uploadResult.data;
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ:', uploadResult.error);
        return null;
      }
    } else {
      console.log('‚ÑπÔ∏è –§–æ—Ç–æ –Ω–µ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ');
      return null;
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ:', error);
    return null;
  }
};

// –ü—Ä–∏–º–µ—Ä 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const exampleGetUserPhotos = async (userId) => {
  console.log('=== –ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===');
  
  try {
    const result = await fileUploadService.getUserPhotos(userId);
    
    if (result.success) {
      console.log('‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã:', result.data);
      console.log('üì∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ:', result.data.photos?.length || 0);
      return result.data;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', result.error);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', error);
    return null;
  }
};

// –ü—Ä–∏–º–µ—Ä 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
export const exampleWorkerStatus = async (userId) => {
  console.log('=== –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ ===');
  
  try {
    const result = await punchService.getWorkerStatus(userId);
    
    if (result.success) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞:', result.data);
      console.log('üë∑ –†–∞–±–æ—Ç–∞–µ—Ç:', result.data.is_working ? '–î–∞' : '–ù–µ—Ç');
      return result.data;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', result.error);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
    return null;
  }
};

// –ü—Ä–∏–º–µ—Ä 8: –ü–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π —Ü–∏–∫–ª
export const exampleFullWorkCycle = async () => {
  console.log('=== –ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ —Ü–∏–∫–ª–∞ ===');
  
  try {
    // 1. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    const userData = await exampleAuth();
    if (!userData) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è');
      return;
    }
    
    const userId = userData.user_id || 123;
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, ID:', userId);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    const status = await exampleWorkerStatus(userId);
    console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', status);
    
    // 3. –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º —Å–º–µ–Ω—É
    if (!status?.is_working) {
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–º–µ–Ω—É...');
      await examplePunchIn(userId);
    }
    
    // 4. –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–µ–æ–ø–æ–∑–∏—Ü–∏–π
    console.log('üìç –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏...');
    for (let i = 0; i < 3; i++) {
      await exampleGeoLocation(userId);
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–∑–∏—Ü–∏—è–º–∏
      await new Promise(resolve => setTimeout(resolve, 2000));
    }
    
    // 5. –î–µ–ª–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
    console.log('üì∏ –î–µ–ª–∞–µ–º —Ñ–æ—Ç–æ...');
    for (let i = 0; i < 2; i++) {
      await examplePhotoUpload(userId);
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    // 6. –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–º–µ–Ω—É
    console.log('üèÅ –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–º–µ–Ω—É...');
    await examplePunchOut(userId);
    
    // 7. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    console.log('üñºÔ∏è –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...');
    await exampleGetUserPhotos(userId);
    
    console.log('‚úÖ –ü–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ–ª–Ω–æ–º —Ä–∞–±–æ—á–µ–º —Ü–∏–∫–ª–µ:', error);
  }
};

// –ü—Ä–∏–º–µ—Ä 9: –†–∞–±–æ—Ç–∞ —Å –∫–∞–º–µ—Ä–æ–π
export const exampleCameraOperations = async () => {
  console.log('=== –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π ===');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    const permissions = await cameraService.checkCameraPermissions();
    console.log('üîê –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã:', permissions);
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const defaultOptions = cameraService.getDefaultOptions();
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', defaultOptions);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    cameraService.updateDefaultOptions({
      quality: 0.9,
      maxWidth: 1280,
      maxHeight: 720,
    });
    
    const updatedOptions = cameraService.getDefaultOptions();
    console.log('‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', updatedOptions);
    
    // –í—ã–±–∏—Ä–∞–µ–º —Ñ–æ—Ç–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
    const galleryResult = await cameraService.selectPhoto();
    console.log('üñºÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏:', galleryResult);
    
    // –í—ã–±–∏—Ä–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ
    const multipleResult = await cameraService.selectMultiplePhotos();
    console.log('üñºÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–æ—Ç–æ:', multipleResult);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–∞–º–µ—Ä–æ–π:', error);
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
export const allExamples = {
  exampleAuth,
  examplePunchIn,
  examplePunchOut,
  exampleGeoLocation,
  examplePhotoUpload,
  exampleGetUserPhotos,
  exampleWorkerStatus,
  exampleFullWorkCycle,
  exampleCameraOperations,
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
export const runAllExamples = async () => {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤...');
  
  for (const [name, example] of Object.entries(allExamples)) {
    if (name === 'exampleFullWorkCycle') continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª
    
    console.log(`\n--- –ó–∞–ø—É—Å–∫ ${name} ---`);
    try {
      await example();
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${name}:`, error);
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–∏–º–µ—Ä–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 1000));
  }
  
  console.log('\n‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!');
};

export default allExamples;

