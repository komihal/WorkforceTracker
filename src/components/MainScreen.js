import React, { useState, useEffect, useRef, useCallback } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  Alert,
  ActivityIndicator,
  SafeAreaView,
  ScrollView,
  Platform,
  AppState,
  Button,
} from 'react-native';
import authService from '../services/authService';
import punchService from '../services/punchService';
import geoService from '../services/geoService';
import backgroundService from '../services/backgroundService';
import cameraService from '../services/cameraService';
import fileUploadService from '../services/fileUploadService';
import deviceUtils from '../utils/deviceUtils';
import { ensureAlwaysLocationPermission, runSequentialPermissionFlow, forceShowBackgroundPermissionDialog, checkNotificationsPermissionOnAppActive, requestBackgroundLocationTwoClicks } from '../services/permissionsService';
import { canStartShift, humanizeStatus, normalizeStatus, WorkerStatus } from '../helpers/shift';
import ShiftStatusManager from '../services/shiftStatusService';
// import { initLocation } from '../location'; // –û—Ç–∫–ª—é—á–µ–Ω–æ - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ App.js
// geo endpoint/test toggles removed
// DebugBgScreen and BgGeoTestScreen removed - no longer needed

const MainScreen = ({ onLogout }) => {
  const [isLoading, setIsLoading] = useState(false);
  const [showAlwaysBanner, setShowAlwaysBanner] = useState(false);
  const [isShiftActive, setIsShiftActive] = useState(false);
  const [currentUser, setCurrentUser] = useState(null);
  const [userStatus, setUserStatus] = useState(WorkerStatus.READY_TO_WORK);
  // endpoint & test toggles removed
  const [shiftStatusManager, setShiftStatusManager] = useState(null);
  const [indicators, setIndicators] = useState({ gps: false, network: false, battery: true, permission: false, notifications: true });
  const [showUserDetails, setShowUserDetails] = useState(false);
  
  // Guards –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
  const batteryOptimizationRequested = useRef(false);
  const locationPermissionsRequested = useRef(false);

  useEffect(() => {
    const loadUserData = async () => {
      const user = await authService.getCurrentUser();
      if (user) {
        console.log('Loaded currentUser:', user);
        setCurrentUser(user);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ShiftStatusManager
        const deviceId = await deviceUtils.getDeviceId();
        
        // –í–†–ï–ú–ï–ù–ù–û –û–¢–ö–õ–Æ–ß–ê–ï–ú ShiftStatusManager –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
        const { DISABLE_POLLING, disabledShiftStatusManager } = require('../../disable_polling_websockets');
        const manager = DISABLE_POLLING ? disabledShiftStatusManager : new ShiftStatusManager(user.user_id || 123, deviceId);
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º BGGeo –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è locationTemplate
        try {
          const { forceResetBGGeo, checkBGGeoConfig } = require('../../force_reset_bggeo');
          console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é BGGeo...');
          const config = await checkBGGeoConfig();
          if (config.hasMathFloor) {
            console.log('üîß –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ–º —Å–±—Ä–æ—Å...');
            await forceResetBGGeo();
          }
        } catch (e) {
          console.log('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ BGGeo:', e);
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
        manager.setStatusUpdateCallback(async (data) => {
          console.log('=== SHIFT STATUS UPDATE ===');
          console.log('Received data:', data);
          
          const hasActiveShift = data.has_active_shift || false;
          const workerStatus = data.worker_status || '–∞–∫—Ç–∏–≤–µ–Ω';
          
          setIsShiftActive(hasActiveShift);
          setUserStatus(normalizeStatus(workerStatus));
          
          console.log('Updated state:', {
            isShiftActive: hasActiveShift,
            userStatus: workerStatus
          });
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º/–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
          try {
            const { ensureTracking, stopTracking } = require('../location.js');
            if (hasActiveShift) {
              // –ò—Å–ø–æ–ª—å–∑—É–µ–º user_id –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã, –µ—Å–ª–∏ currentUser –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
              const userId = currentUser?.user_id || data.worker?.user_id;
              if (userId) {
                await ensureTracking(userId);
                console.log('Auto-start tracking based on active shift for user:', userId);
              } else {
                console.log('Cannot start tracking: user_id is not available in currentUser or shift data');
              }
            } else {
              await stopTracking();
              console.log('Auto-stop tracking based on inactive shift');
            }
          } catch (e) {
            console.log('Tracking sync with shift status failed:', e?.message || e);
          }
        });
        
        setShiftStatusManager(manager);
      }
    };
    
    const requestLocationPermissions = async () => {
      if (locationPermissionsRequested.current) {
        console.log('Location permissions already requested, skipping...');
        return;
      }
      
      try {
        console.log('Requesting background location permission...');
        locationPermissionsRequested.current = true;
        const hasAlways = await ensureAlwaysLocationPermission();
        if (hasAlways) {
          console.log('Background location permission granted');
        } else {
          console.log('Background location permission denied');
        }
      } catch (error) {
        console.error('Error requesting location permissions:', error);
        locationPermissionsRequested.current = false; // Reset on error
      }
    };
    
    loadUserData();
    // endpoint/test toggles removed
    requestLocationPermissions();
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π flow –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ –≤ —ç–∫—Ä–∞–Ω (foreground-only)
    setTimeout(() => { runSequentialPermissionFlow(); }, 600);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±–∞—Ç–∞—Ä–µ–∏ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
    if (!batteryOptimizationRequested.current) {
      requestBatteryOptimization();
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞ - –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    console.log('Location initialization disabled in MainScreen - handled by App.js on login');
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º AppState –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ Always
    const sub = AppState.addEventListener('change', async (state) => {
      if (state === 'active' && Platform.OS === 'android') {
        try {
          const { check, RESULTS, PERMISSIONS } = require('react-native-permissions');
          const bg = await check(PERMISSIONS.ANDROID.ACCESS_BACKGROUND_LOCATION);
          setShowAlwaysBanner(bg !== RESULTS.GRANTED);
        } catch {}
      }
    });

    // Cleanup –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      if (shiftStatusManager) {
        shiftStatusManager.disconnect();
      }
      sub.remove();
    };
  }, []); // –£–±–∏—Ä–∞–µ–º shiftStatusManager –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞

  // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã: GPS / —Å–µ—Ç—å / —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ / —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
  const refreshIndicators = useCallback(async () => {
    try {
      let permissionOk = false;
      try {
        const { check, RESULTS, PERMISSIONS } = require('react-native-permissions');
        if (Platform.OS === 'android') {
          const bg = await check(PERMISSIONS.ANDROID.ACCESS_BACKGROUND_LOCATION);
          const fine = await check(PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION);
          permissionOk = (bg === RESULTS.GRANTED) || (fine === RESULTS.GRANTED);
        } else {
          const always = await check(PERMISSIONS.IOS.LOCATION_ALWAYS);
          const whenInUse = await check(PERMISSIONS.IOS.LOCATION_WHEN_IN_USE);
          permissionOk = (always === RESULTS.GRANTED) || (whenInUse === RESULTS.GRANTED);
        }
      } catch {}

      let batteryOk = true;
      try {
        const { getBatteryWhitelistStatus } = require('../location.js');
        const status = await getBatteryWhitelistStatus();
        batteryOk = Platform.OS !== 'android' ? true : !!status?.ignored;
      } catch {}

      let networkOk = false;
      try {
        const net = await deviceUtils.getNetworkInfo();
        networkOk = !!net?.isConnected;
      } catch {}

      let notificationsOk = true;
      try {
        const { check, RESULTS, PERMISSIONS } = require('react-native-permissions');
        if (Platform.OS === 'android' && Platform.Version >= 33) {
          const notif = await check(PERMISSIONS.ANDROID.POST_NOTIFICATIONS);
          notificationsOk = notif === RESULTS.GRANTED;
        } else {
          notificationsOk = true;
        }
      } catch {}

      let gpsOk = false;
      try {
        gpsOk = await deviceUtils.isLocationAvailable();
      } catch {}

      setIndicators({ gps: !!gpsOk, network: !!networkOk, battery: !!batteryOk, permission: !!permissionOk, notifications: !!notificationsOk });
    } catch (e) {
      // fail-safe: –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º state –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è—Ö
    }
  }, []);

  useEffect(() => {
    // –ø–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –æ–ø—Ä–æ—Å
    refreshIndicators();
    const timer = setInterval(refreshIndicators, 10000);
    return () => clearInterval(timer);
  }, [refreshIndicators]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –∏ —Å–º–µ–Ω—ã
  // –§—É–Ω–∫—Ü–∏—è checkWorkerStatus —É–¥–∞–ª–µ–Ω–∞ - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ShiftStatusManager

  // –ù–∞—á–∞–ª–æ —Å–º–µ–Ω—ã
  const handlePunchIn = async () => {
    if (!currentUser) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    if (!shiftStatusManager) {
      Alert.alert('–û—à–∏–±–∫–∞', '–°–µ—Ä–≤–∏—Å —Å—Ç–∞—Ç—É—Å–∞ —Å–º–µ–Ω—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ
    setIsLoading(true);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
    try {
      const currentStatus = await shiftStatusManager.getCurrentStatus();
      console.log('Current status before punch in:', currentStatus);
      
      if (currentStatus.has_active_shift) {
        Alert.alert('–°–º–µ–Ω–∞ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞', '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–º–µ–Ω–∞');
        setIsLoading(false);
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—á–µ–≥–æ
      const workerStatus = currentStatus.worker_status || '–∞–∫—Ç–∏–≤–µ–Ω';
      const normalized = normalizeStatus(workerStatus);
      
      if (normalized === WorkerStatus.BLOCKED) {
        Alert.alert('–î–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω', '–í–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
        setIsLoading(false);
        return;
      }
      
      if (normalized === WorkerStatus.FIRED) {
        Alert.alert('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', '–í–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–æ–ª–µ–Ω.');
        setIsLoading(false);
        return;
      }
      
      if (!canStartShift(normalized)) {
        Alert.alert('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', '–í–∞—à —Å—Ç–∞—Ç—É—Å –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—á–∞—Ç—å —Å–º–µ–Ω—É.');
        setIsLoading(false);
        return;
      }
    } catch (error) {
      console.error('Error checking current status:', error);
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å.');
      setIsLoading(false);
      return;
    }

    // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é (–±—ã—Å—Ç—Ä—ã–π –ø–æ—Ç–æ–∫ –≤ 2 –∫–ª–∏–∫–∞)
    try {
      const hasAlways = await requestBackgroundLocationTwoClicks();
      if (!hasAlways) {
        Alert.alert('–§–æ–Ω–æ–≤–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è', '–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã –≤–∫–ª—é—á–∏—Ç–µ ¬´–†–∞–∑—Ä–µ—à–∞—Ç—å –≤—Å–µ–≥–¥–∞¬ª –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.');
        setIsLoading(false);
        return;
      }
    } catch (error) {
      console.error('Error checking location permissions:', error);
      Alert.alert('–û—à–∏–±–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å —Ñ–æ–Ω–æ–≤—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.');
      setIsLoading(false);
      return;
    }

    try {
      // –¢—Ä–µ–±—É–µ–º —Ñ–æ—Ç–æ. –í–æ —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω—É—é –∫–∞–º–µ—Ä—É. –í dev –¥–æ–ø—É—Å–∫–∞–µ–º –≤—ã–±–æ—Ä –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
      let photoResult = await cameraService.takePhoto({ cameraType: 'front' });

      if (!photoResult.success && __DEV__) {
        const galleryResult = await cameraService.selectPhoto();
        if (galleryResult.success) {
          photoResult = galleryResult;
        }
      }

      if (!photoResult.success) {
        Alert.alert('–¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ç–æ', '–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ.');
        setIsLoading(false);
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
      const location = await geoService.getCurrentLocation();

      // –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
      console.log('Adding geo point for punch in:', location);
      const geoPoint = geoService.addGeoPoint(
        location.latitude,    // lat
        location.longitude,   // lon
        location.altitude || 0,  // alt
        (typeof location.altitude_msl === 'number' ? location.altitude_msl : (location.altitude || 0)),  // altMsl
        true,                 // hasAlt
        true,                 // hasAltMsl
        false,                // hasAltMslAccuracy
        1.5                   // mslAccuracyMeters
      );
      console.log('Added geo point for punch in:', geoPoint);

      // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º API, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º punch in
      const phoneImeiIn = await deviceUtils.getDeviceId();
      const uploadIn = await fileUploadService.uploadShiftPhoto(
        {
          uri: photoResult.data?.uri,
          type: photoResult.data?.type,
          fileName: photoResult.data?.fileName || `start_${Date.now()}.jpg`,
        },
        currentUser.user_id || 123,
        phoneImeiIn,
        'start'
      );

      if (!uploadIn.success) {
        Alert.alert('–û—à–∏–±–∫–∞', uploadIn.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã');
        setIsLoading(false);
        return;
      }

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
      await geoService.saveGeoData(
        currentUser.user_id || 123,
        1,
        phoneImeiIn
      );

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ punch
      const result = await shiftStatusManager.sendPunch(1); // 1 = –Ω–∞—á–∞–ª–æ —Å–º–µ–Ω—ã

      if (result.success) {
        Alert.alert('–£—Å–ø–µ—Ö', '–°–º–µ–Ω–∞ –Ω–∞—á–∞—Ç–∞!');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ —Å–º–µ–Ω—ã
        try {
          const { ensureTracking } = require('../location.js');
          if (currentUser?.user_id) {
            await ensureTracking(currentUser.user_id);
            console.log('Location tracking started on punch in for user:', currentUser.user_id);
          } else {
            console.log('Cannot start tracking on punch in: currentUser.user_id is not available');
          }
          
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º backgroundService –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
          console.log('Initializing backgroundService for punch in...');
          const phoneImei = await deviceUtils.getDeviceId();
          await backgroundService.initialize(currentUser.user_id, 1, phoneImei, __DEV__);
          console.log('BackgroundService initialized for punch in');
        } catch (e) {
          console.error('Failed to start tracking on punch in:', e?.message || e);
        }
      } else {
        Alert.alert('–û—à–∏–±–∫–∞', result.error);
      }
    } catch (error) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å —Å–º–µ–Ω—É');
    } finally {
      setIsLoading(false);
    }
  };

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã
  const handlePunchOut = async () => {
    if (!currentUser) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    if (!shiftStatusManager) {
      Alert.alert('–û—à–∏–±–∫–∞', '–°–µ—Ä–≤–∏—Å —Å—Ç–∞—Ç—É—Å–∞ —Å–º–µ–Ω—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
    try {
      const currentStatus = await shiftStatusManager.getCurrentStatus();
      console.log('Current status before punch out:', currentStatus);
      
      if (!currentStatus.has_active_shift) {
        Alert.alert('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã', '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è');
        return;
      }
    } catch (error) {
      console.error('Error checking current status:', error);
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å.');
      return;
    }

    // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é (–±—ã—Å—Ç—Ä—ã–π –ø–æ—Ç–æ–∫ –≤ 2 –∫–ª–∏–∫–∞)
    try {
      const hasAlways = await requestBackgroundLocationTwoClicks();
      if (!hasAlways) {
        Alert.alert('–§–æ–Ω–æ–≤–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è', '–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã –≤–∫–ª—é—á–∏—Ç–µ ¬´–†–∞–∑—Ä–µ—à–∞—Ç—å –≤—Å–µ–≥–¥–∞¬ª –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.');
        return;
      }
    } catch (error) {
      console.error('Error checking location permissions:', error);
      Alert.alert('–û—à–∏–±–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å —Ñ–æ–Ω–æ–≤—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.');
      return;
    }

    setIsLoading(true);
    try {
      // –¢—Ä–µ–±—É–µ–º —Ñ–æ—Ç–æ. –Ø–≤–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω—É—é –∫–∞–º–µ—Ä—É
      let photoResult = await cameraService.takePhoto({ cameraType: 'front' });

      if (!photoResult.success && __DEV__) {
        const galleryResult = await cameraService.selectPhoto();
        if (galleryResult.success) {
          photoResult = galleryResult;
        }
      }

      if (!photoResult.success) {
        Alert.alert('–¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ç–æ', '–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ.');
        setIsLoading(false);
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
      const location = await geoService.getCurrentLocation();

      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
      console.log('Adding geo point for punch out:', location);
      const geoPoint = geoService.addGeoPoint(
        location.latitude,    // lat
        location.longitude,   // lon
        location.altitude || 0,  // alt
        (typeof location.altitude_msl === 'number' ? location.altitude_msl : (location.altitude || 0)),  // altMsl
        true,                 // hasAlt
        true,                 // hasAltMsl
        false,                // hasAltMslAccuracy
        1.5                   // mslAccuracyMeters
      );
      console.log('Added geo point for punch out:', geoPoint);

      // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º API, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º punch out
      const phoneImeiOut = await deviceUtils.getDeviceId();
      const uploadOut = await fileUploadService.uploadShiftPhoto(
        {
          uri: photoResult.data?.uri,
          type: photoResult.data?.type,
          fileName: photoResult.data?.fileName || `end_${Date.now()}.jpg`,
        },
        currentUser.user_id || 123,
        phoneImeiOut,
        'end'
      );

      if (!uploadOut.success) {
        Alert.alert('–û—à–∏–±–∫–∞', uploadOut.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã');
        setIsLoading(false);
        return;
      }

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
      await geoService.saveGeoData(
        currentUser.user_id || 123,
        1,
        phoneImeiOut
      );

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ punch
      const result = await shiftStatusManager.sendPunch(0); // 0 = –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã

      if (result.success) {
        Alert.alert('–£—Å–ø–µ—Ö', '–°–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–º–µ–Ω—ã
        try {
          const { stopTracking } = require('../location.js');
          await stopTracking();
          console.log('Location tracking stopped on punch out');
        } catch (e) {
          console.error('Failed to stop tracking on punch out:', e?.message || e);
        }
      } else {
        Alert.alert('–û—à–∏–±–∫–∞', result.error);
      }
    } catch (error) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É');
    } finally {
      setIsLoading(false);
    }
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥–µ–æ–¥–∞–Ω–Ω—ã—Ö
  const saveGeoData = async () => {
    try {
      const result = await geoService.saveGeoData(
        currentUser.user_id || 123,
        1, // place_id
        await deviceUtils.getDeviceId() // –†–µ–∞–ª—å–Ω—ã–π IMEI
      );

      if (result.success) {
        Alert.alert('–£—Å–ø–µ—Ö', '–ì–µ–æ–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
      } else {
        Alert.alert('–û—à–∏–±–∫–∞', result.error);
      }
    } catch (error) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≥–µ–æ–¥–∞–Ω–Ω—ã–µ');
    }
  };

  // (dev test functions removed)



  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±–∞—Ç–∞—Ä–µ–∏ (—Å guard)
  const requestBatteryOptimization = useCallback(async () => {
    if (batteryOptimizationRequested.current) {
      console.log('[Battery] Already requested, skipping...');
      return;
    }
    
    batteryOptimizationRequested.current = true;
    try {
      const { ensureBatteryWhitelistUI } = require('../location.js');
      await ensureBatteryWhitelistUI();
    } catch (error) {
      console.error('Error requesting battery optimization:', error);
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±–∞—Ç–∞—Ä–µ–∏');
    }
  }, []);

  // —Ç–µ—Å—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —É–¥–∞–ª—ë–Ω

  // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  const handleLogout = async () => {
    console.log('=== HANDLE LOGOUT CALLED ===');
    console.log('isShiftActive:', isShiftActive);
    console.log('currentUser:', currentUser);
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —Å–º–µ–Ω–∞
      if (isShiftActive) {
        console.log('Showing shift interruption alert...');
        Alert.alert(
          '–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Å–º–µ–Ω—ã',
          '–£ –≤–∞—Å –∞–∫—Ç–∏–≤–Ω–∞ —Å–º–µ–Ω–∞. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å —Å–º–µ–Ω—É –∏ –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã?',
          [
            {
              text: '–û—Ç–º–µ–Ω–∞',
              style: 'cancel',
            },
            {
              text: '–ü—Ä–µ—Ä–≤–∞—Ç—å —Å–º–µ–Ω—É –∏ –≤—ã–π—Ç–∏',
              style: 'destructive',
              onPress: async () => {
                try {
                  console.log('User confirmed shift interruption and logout');
                  
                  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–º–µ–Ω—É –±–µ–∑ —Ñ–æ—Ç–æ
                  if (currentUser && currentUser.user_id) {
                    console.log('Auto-closing shift before logout...');
                    
                    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
                    try {
                      const { stopTracking } = require('../location.js');
                      await stopTracking();
                      console.log('Location tracking stopped before logout');
                    } catch (e) {
                      console.error('Failed to stop tracking before logout:', e?.message || e);
                    }
                    
                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–º–µ–Ω—É
                    const phoneImei = await deviceUtils.getDeviceId();
                    const autoPunchResult = await punchService.autoPunchOut(currentUser.user_id, phoneImei);
                    
                    if (autoPunchResult.success) {
                      console.log('Shift auto-closed successfully before logout');
                      Alert.alert('–°–º–µ–Ω–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞', '–°–º–µ–Ω–∞ –±—ã–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç–∞');
                    } else {
                      console.error('Failed to auto-close shift before logout:', autoPunchResult.error);
                      Alert.alert('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
                    }
                  }
                  
                  // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                  await authService.logout();
                  onLogout();
                } catch (error) {
                  console.error('Error during logout with shift closure:', error);
                  Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
                }
              },
            },
          ]
        );
      } else {
        // –ï—Å–ª–∏ —Å–º–µ–Ω–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
        await authService.logout();
        onLogout();
      }
    } catch (error) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    }
  };

  const displayName = currentUser
    ? [currentUser.user_lname, currentUser.user_fname, currentUser.user_mname]
        .filter(Boolean)
        .join(' ')
    : '';


  return (
    <SafeAreaView style={styles.container}>
      <ScrollView style={styles.content}>
        <View style={styles.headerArea}>
          <View style={styles.logo}>
            <Text style={styles.logoLetter}>–°</Text>
          </View>
          <Text style={styles.appName}>–°–º–µ–Ω–∞</Text>
          <Text style={styles.subtitle}>{currentUser ? (displayName || '‚Äî') : '–ó–∞–≥—Ä—É–∑–∫–∞...'}</Text>
        </View>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç–∫—Å–ø–∞–Ω–¥–µ—Ä–æ–º –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏/–¥–µ–π—Å—Ç–≤–∏—è–º–∏ */}
        <View style={styles.userCard}>
          <TouchableOpacity style={styles.userCardHeader} onPress={() => setShowUserDetails(v => !v)}>
            <Text style={styles.userCardTitle}>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</Text>
            <Text style={styles.userCardChevron}>{showUserDetails ? '‚ñ≤' : '‚ñº'}</Text>
          </TouchableOpacity>
          <Text style={styles.userName}>{currentUser ? (displayName || '‚Äî') : '‚Äî'}</Text>
          {showUserDetails && (
            <View style={styles.userDetails}>
              <View style={styles.detailRow}>
                <Text style={styles.detailLabel}>üîë –§–æ–Ω–æ–≤–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è</Text>
                <Text style={[styles.detailValue, indicators.permission ? styles.ok : styles.bad]}>{indicators.permission ? '–û–ö' : '–¢—Ä–µ–±—É–µ—Ç—Å—è'}</Text>
                {!indicators.permission && (
                  <Button title="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å" onPress={requestBackgroundLocationTwoClicks} />
                )}
              </View>
              <View style={styles.detailRow}>
                <Text style={styles.detailLabel}>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
                <Text style={[styles.detailValue, indicators.notifications ? styles.ok : styles.bad]}>{indicators.notifications ? '–û–ö' : '–í—ã–∫–ª—é—á–µ–Ω—ã'}</Text>
                {!indicators.notifications && (
                  <Button title="–†–∞–∑—Ä–µ—à–∏—Ç—å" onPress={checkNotificationsPermissionOnAppActive} />
                )}
              </View>
              <View style={styles.detailRow}>
                <Text style={styles.detailLabel}>üîã –≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ</Text>
                <Text style={[styles.detailValue, indicators.battery ? styles.ok : styles.bad]}>{indicators.battery ? '–û–ö' : '–í–∫–ª—é—á–µ–Ω–æ'}</Text>
                {!indicators.battery && (
                  <Button title="–û—Ç–∫—Ä—ã—Ç—å" onPress={requestBatteryOptimization} />
                )}
              </View>
            </View>
          )}
        </View>

        {/* –ö–æ—Ä–æ—Ç–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã: GPS / —Å–µ—Ç—å / —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ / —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è */}
        <View style={styles.indicatorsRow}>
          <View style={[styles.indicatorItem, indicators.gps ? styles.indicatorOk : styles.indicatorBad]}>
            <Text style={styles.indicatorLabel}>üìç GPS</Text>
          </View>
          <View style={[styles.indicatorItem, indicators.network ? styles.indicatorOk : styles.indicatorBad]}>
            <Text style={styles.indicatorLabel}>üåê –°–µ—Ç—å</Text>
          </View>
          <View style={[styles.indicatorItem, indicators.battery ? styles.indicatorOk : styles.indicatorBad]}>
            <Text style={styles.indicatorLabel}>üîã –≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ</Text>
          </View>
          <View style={[styles.indicatorItem, indicators.permission ? styles.indicatorOk : styles.indicatorBad]}>
            <Text style={styles.indicatorLabel}>üîë –†–∞–∑—Ä–µ—à–µ–Ω–∏—è</Text>
          </View>
        </View>

        <View style={styles.statusCard}>
          <Text style={styles.statusTitle}>–°—Ç–∞—Ç—É—Å</Text>
          <View style={[styles.statusIndicator, isShiftActive ? styles.activeStatus : styles.inactiveStatus]}>
            <Text style={styles.statusText}>
              {humanizeStatus(userStatus)}{isShiftActive ? ' ‚Ä¢ –°–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞' : ''}
            </Text>
          </View>
          {userStatus === WorkerStatus.BLOCKED && (
            <Text style={{ color: 'crimson', fontSize: 14, marginTop: 10, textAlign: 'center', fontWeight: '600' }}>
              ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!
            </Text>
          )}

        </View>

        <View style={styles.actions}>
          {!isShiftActive ? (
            canStartShift(userStatus) ? (
              <TouchableOpacity
                style={[styles.button, styles.punchInButton, isLoading && styles.buttonDisabled]}
                onPress={handlePunchIn}
                disabled={isLoading}
              >
                {isLoading ? (
                  <ActivityIndicator color="#fff" />
                ) : (
                  <Text style={styles.buttonText}>–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É</Text>
                )}
              </TouchableOpacity>
            ) : (
              <View>
                <Text style={{ color: 'crimson', textAlign: 'center', marginBottom: 10 }}>
                  {userStatus === WorkerStatus.BLOCKED
                    ? '–í–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º'
                    : '–í–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–æ–ª–µ–Ω'}
                </Text>
                {userStatus === WorkerStatus.BLOCKED ? (
                  <TouchableOpacity
                    style={[styles.button, styles.punchInButton, isLoading && styles.buttonDisabled]}
                    onPress={async () => {
                      if (!currentUser) return;
                      setIsLoading(true);
                      try {
                        const res = await punchService.requestUnblock(currentUser.user_id || 123);
                        if (res.success) {
                          Alert.alert('–ì–æ—Ç–æ–≤–æ', '–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
                          // –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ ShiftStatusManager
                        } else {
                          Alert.alert(
                            '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞', 
                            res.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å',
                            [
                              { text: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å', onPress: () => {
                                // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞
                                setTimeout(() => {
                                  if (currentUser) {
                                    const retryUnblock = async () => {
                                      setIsLoading(true);
                                      try {
                                        const retryRes = await punchService.requestUnblock(currentUser.user_id || 123);
                                        if (retryRes.success) {
                                          Alert.alert('–ì–æ—Ç–æ–≤–æ', '–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
                                          // –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ ShiftStatusManager
                                        } else {
                                          Alert.alert('–û—à–∏–±–∫–∞', retryRes.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å');
                                        }
                                      } catch (e) {
                                        Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.');
                                      } finally {
                                        setIsLoading(false);
                                      }
                                    };
                                    retryUnblock();
                                  }
                                }, 100);
                              }},
                              { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
                            ]
                          );
                        }
                      } catch (e) {
                        console.error('Request unblock error:', e);
                        Alert.alert(
                          '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏', 
                          '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.',
                          [
                            { text: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å', onPress: () => {
                              // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞
                              setTimeout(() => {
                                if (currentUser) {
                                  const retryUnblock = async () => {
                                    setIsLoading(true);
                                    try {
                                      const retryRes = await punchService.requestUnblock(currentUser.user_id || 123);
                                      if (retryRes.success) {
                                        Alert.alert('–ì–æ—Ç–æ–≤–æ', '–ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
                                        // –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ ShiftStatusManager
                                      } else {
                                        Alert.alert('–û—à–∏–±–∫–∞', retryRes.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å');
                                      }
                                    } catch (e) {
                                      Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.');
                                    } finally {
                                      setIsLoading(false);
                                    }
                                  };
                                  retryUnblock();
                                }
                              }, 100);
                            }},
                            { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
                          ]
                        );
                      } finally {
                        setIsLoading(false);
                      }
                    }}
                    disabled={isLoading}
                  >
                    {isLoading ? (
                      <ActivityIndicator color="#fff" />
                    ) : (
                      <Text style={styles.buttonText}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É</Text>
                    )}
                  </TouchableOpacity>
                ) : null}
              </View>
            )
          ) : (
            <TouchableOpacity
              style={[styles.button, styles.punchOutButton, isLoading && styles.buttonDisabled]}
              onPress={handlePunchOut}
              disabled={isLoading}
            >
              {isLoading ? (
                <ActivityIndicator color="#fff" />
              ) : (
                <Text style={styles.buttonText}>–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É</Text>
              )}
            </TouchableOpacity>
          )}
        </View>

        <View style={styles.bottomButtons}>
          <TouchableOpacity
            style={[styles.button, styles.logoutButton]}
            onPress={handleLogout}
          >
            <Text style={styles.buttonText}>–í—ã–π—Ç–∏</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  content: {
    flex: 1,
    padding: 20,
  },
  header: {
    alignItems: 'center',
    marginTop: 12,
    marginBottom: 30,
  },
  headerArea: {
    alignItems: 'center',
    paddingTop: 76,
    paddingBottom: 12,
  },
  logo: {
    width: 72,
    height: 72,
    borderRadius: 36,
    backgroundColor: '#007AFF',
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 10,
  },
  logoLetter: {
    color: '#fff',
    fontSize: 34,
    fontWeight: '800',
  },
  appName: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 6,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 10,
  },
  subtitle: {
    fontSize: 16,
    color: '#666',
  },
  userCard: {
    backgroundColor: '#fff',
    padding: 16,
    borderRadius: 12,
    marginBottom: 16,
  },
  userCardHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 6,
  },
  userCardTitle: {
    fontSize: 16,
    fontWeight: '700',
    color: '#333',
  },
  userCardChevron: {
    fontSize: 16,
    color: '#666',
  },
  userName: {
    fontSize: 14,
    color: '#555',
    marginBottom: 8,
  },
  userDetails: {
    gap: 10,
    marginTop: 4,
  },
  detailRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: 10,
  },
  detailLabel: {
    flex: 1,
    color: '#333',
    fontSize: 14,
    fontWeight: '600',
  },
  detailValue: {
    marginRight: 6,
    fontWeight: '700',
  },
  ok: { color: '#2e7d32' },
  bad: { color: '#c62828' },
  statusCard: {
    backgroundColor: '#fff',
    padding: 20,
    borderRadius: 12,
    marginBottom: 20,
    alignItems: 'center',
  },
  indicatorsRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    gap: 8,
    marginBottom: 16,
  },
  indicatorItem: {
    flex: 1,
    paddingVertical: 8,
    borderRadius: 12,
    alignItems: 'center',
    borderWidth: 1,
  },
  indicatorOk: {
    backgroundColor: '#E8F5E9',
    borderColor: '#4CAF50',
  },
  indicatorBad: {
    backgroundColor: '#FFEBEE',
    borderColor: '#F44336',
  },
  indicatorLabel: {
    color: '#333',
    fontSize: 12,
    fontWeight: '600',
  },
  statusTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#333',
    marginBottom: 15,
  },
  statusIndicator: {
    paddingHorizontal: 20,
    paddingVertical: 10,
    borderRadius: 20,
  },
  activeStatus: {
    backgroundColor: '#4CAF50',
  },
  inactiveStatus: {
    backgroundColor: '#F44336',
  },
  statusText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
  actions: {
    marginBottom: 20,
  },
  button: {
    padding: 15,
    borderRadius: 8,
    alignItems: 'center',
    marginBottom: 15,
  },
  punchInButton: {
    backgroundColor: '#4CAF50',
  },
  punchOutButton: {
    backgroundColor: '#F44336',
  },
  logoutButton: {
    backgroundColor: '#9E9E9E',
  },
  testButton: {
    backgroundColor: '#2196F3',
  },

  buttonDisabled: {
    backgroundColor: '#ccc',
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },

  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#333',
    marginBottom: 15,
  },

  bottomButtons: {
    flexDirection: 'column',
    gap: 10,
  },
  endpointToggleSection: {
    backgroundColor: '#fff',
    padding: 20,
    borderRadius: 12,
    marginBottom: 20,
  },
  endpointToggleButton: {
    backgroundColor: '#2196F3',
    marginBottom: 10,
  },
  endpointDescription: {
    fontSize: 12,
    color: '#666',
    textAlign: 'center',
    fontStyle: 'italic',
  },
  banner: {
    backgroundColor: '#FFF7E6',
    borderColor: '#FFC107',
    borderWidth: 1,
    padding: 12,
    borderRadius: 8,
    marginBottom: 12,
  },
  bannerText: {
    color: '#7A5D00',
    marginBottom: 8,
    textAlign: 'center',
    fontSize: 14,
    fontWeight: '600'
  },
  bannerButtons: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    gap: 8,
  },
  testButton: {
    backgroundColor: '#FF9800',
  },
  testButtonActive: {
    backgroundColor: '#4CAF50',
  },

});

export default MainScreen;