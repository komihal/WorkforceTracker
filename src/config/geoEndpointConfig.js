// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É webhook –∏ API
import AsyncStorage from '@react-native-async-storage/async-storage';

const STORAGE_KEY = 'geo_endpoint_mode';

export const ENDPOINT_MODES = {
  API: 'api',        // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ API Django
  WEBHOOK: 'webhook' // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ webhook
};

class GeoEndpointConfig {
  constructor() {
    this.currentMode = ENDPOINT_MODES.API; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é API
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
  async getCurrentMode() {
    try {
      const savedMode = await AsyncStorage.getItem(STORAGE_KEY);
      if (savedMode && Object.values(ENDPOINT_MODES).includes(savedMode)) {
        this.currentMode = savedMode;
      }
      return this.currentMode;
    } catch (error) {
      console.error('Error getting geo endpoint mode:', error);
      return this.currentMode;
    }
  }

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞
  async setMode(mode) {
    try {
      if (!Object.values(ENDPOINT_MODES).includes(mode)) {
        throw new Error(`Invalid endpoint mode: ${mode}`);
      }
      
      this.currentMode = mode;
      await AsyncStorage.setItem(STORAGE_KEY, mode);
      console.log(`Geo endpoint mode changed to: ${mode}`);
      return true;
    } catch (error) {
      console.error('Error setting geo endpoint mode:', error);
      return false;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ webhook
  async isWebhookMode() {
    const mode = await this.getCurrentMode();
    return mode === ENDPOINT_MODES.WEBHOOK;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ API
  async isApiMode() {
    const mode = await this.getCurrentMode();
    return mode === ENDPOINT_MODES.API;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
  async getModeDescription() {
    const mode = await this.getCurrentMode();
    return mode === ENDPOINT_MODES.WEBHOOK 
      ? 'Webhook (–¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)' 
      : 'API Django (–¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è)';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
  async getModeIcon() {
    const mode = await this.getCurrentMode();
    return mode === ENDPOINT_MODES.WEBHOOK ? 'üîó' : 'üíæ';
  }
}

export default new GeoEndpointConfig();
